#include "SBNDCVNMapper.fcl"
#include "simulationservices_sbnd.fcl"
#include "rootoutput_sbnd.fcl"
#include "services_sbnd.fcl"
#include "messages_sbnd.fcl"
#include "sam_sbnd.fcl"
#include "larfft_sbnd.fcl"
#include "signalservices_sbnd.fcl"
#include "rootoutput_sbnd.fcl"

process_name: SBNDCVNEvaTest

services:
{
  RandomNumberGenerator:     {}                                 # required by fuzzyCluster
  message:                   @local::sbnd_message_services_prod # from messages_sbnd.fcl
  FileCatalogMetadata:       @local::sbnd_file_catalog_mc       # from sam_sbnd.fcl
  MetadataSBN:               @local::sbnd_file_catalog_sbn      # from sam_sbnd.fcl
                             @table::sbnd_services              # from services_sbnd.fcl
  LArFFT:                    @local::sbnd_larfft
  SignalShapingServiceSBND:  @local::sbnd_signalshapingservice  # from signalservices_sbnd.fcl
  ParticleInventoryService:  @local::standard_particleinventoryservice
  TFileService: { fileName: "cvn.root" }
}
services.FileCatalogMetadataSBN: {
  @table::sbnd_file_catalog_extra
  FCLName:        ""
  ProjectName:    ""
  ProjectStage:   ""
  ProjectVersion: ""
  ProjectSoftware:""
  ProductionName: ""
  ProductionType: ""
} # services.FileCatalogMetadataSBND

source:
{
  module_type: RootInput
  maxEvents:  -1
}


physics:
{

 producers:{
       #sbndpixelmap: @local::standard_cvnmapper
       cvn: @local::standard_sbndcvnevaluatorslc
 }
    
 analyzers:{
       cvntest: @local::standard_sbndcvntest
 }
 
 filters:  {} 
 
 #reco: [sbndpixelmap, cvn]
 reco: [cvn]

 ana: [ cvntest ]
 
# stream: [ ]
 
 trigger_paths: [ reco ] 
 
 end_paths: [ana]
}
