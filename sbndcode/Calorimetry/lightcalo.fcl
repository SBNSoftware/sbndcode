#include "opticalsimparameterisations_sbnd.fcl"

BEGIN_PROLOG
lightcalo:
{
    module_type: "LightCaloProducer"

    VUVHits: @local::sbnd_vuv_RS100cm_hits_parameterization
    VIVHits: @local::sbnd_vis_RS100cm_hits_parameterization

    OpFlashProducers:    ["opflashtpc0", "opflashtpc1"]
    OpFlashAraProducers: ["opflashtpc0xarapuca", "opflashtpc1xarapuca"]
    SliceProducer:       "pandora"
    FlashMatchProducer:  "fmatch"
    UseArapucas:         false 
    nuScoreCut:          0.4 # default: accept nusScore > 0.4, to analyze all slices, set nuScoreCut = -1 
    fmScoreCut:          7   # default: accept 0 < fm score < fmScoreCut, to analyze all slices, set fmScoreCut = 1e3
    UseAllPlanes:        false # if true: Q, L, E will be calculated separately for each plane (increases computational time)
                               # if false: Q, L, E will be calculated for best plane only (highest # of hits)
    Verbose:             false 

    # flash parameters
    SimpleOpFlashOffset: 0.2  # the offset between the t0 from SimpleFlash and OpFlashes 
    PMTARAFlashOffset:   0.05 # the offset between the t0 of PMT OpFlashes and X-ARA OpFlashes
    FlashNoiseThreshold: 600. # for PMTS, flash total PE threshold to ignore a flash (below thresh = noise), equivalent to 10 PE per PMT
    PMTPERange: [200,3000]      # the lower and upper PE thresholds to evaluate a flash. Below lower -> noise, above upper -> non-linearity

    # calibration constants & simulation parameters  
    ## shouldn't have to change this unless you change simulation parameters 
    CalAreaConstants:    [ 0.0200906, 0.0200016, 0.0201293 ] # calibration constants for wire planes 
    OpDetDirectEff:      [ 0.152, 0.096, 0.01264, 0.01752 ] # direct (VUV) efficiencies ... uncoated PMT, coated PMT, vis ara, vuv ara
    OpDetReflectEff:     [ 0.152, 0.104, 0.01264, 0.00271 ] # reflected (VIS) efficiencies 
    ScintPreScale:       0.152 # Scintillation Pre-Scale factor in simulation (set in ionandscint, should be equal to the maximum efficiency above)
    
    # parameters for truth validation 
    TruthValidation:     false # can only set to true if the reco2 files have SimEnergyDeposits
    SimEnergyProducer:   "ionandscint" # only looking at energy deposits in the AV 
    TruthNeutrino:       true # if validating anything other than simb::kBeamNeutrino, set to false 
}
END_PROLOG
