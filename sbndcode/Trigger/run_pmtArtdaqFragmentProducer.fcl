#include "services_sbnd.fcl"
#include "messages_sbnd.fcl"

#include "simulationservices_sbnd.fcl"
#include "rootoutput_sbnd.fcl"

#include "pmtArtdaqFragmentProducer.fcl"

process_name: PMTFragmentProducer

services:
{
    @table::sbnd_detsim_services
    TFileService: { fileName: "test_hist.root" }
    RandomNumberGenerator: {} #ART native random number generator 
} 

#source is now a root file                                                                                         
source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create                                                              
}

outputs:
{
 out1:
 {
   @table::sbnd_rootoutput
   fastCloning: true
 }
}

physics:
{

 producers:
 {
  fragmentProducer: @local::pmtArtdaqFragmentProducer
 }

 processwvfms: [fragmentProducer]
 
 stream1: [ out1 ]

 trigger_paths: [ processwvfms ]

 end_paths: [ stream1 ]

}

physics.producers.fragmentProducer.MultiplicityThreshold: 10
physics.producers.fragmentProducer.BeamWindowLength: 1.8
