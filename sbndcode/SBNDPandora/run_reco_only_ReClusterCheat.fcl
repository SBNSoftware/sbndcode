#include "mctrutht0matching.fcl"
#include "services_sbnd.fcl"
#include "simulationservices_sbnd.fcl"
#include "messages_sbnd.fcl"
#include "sam_sbnd.fcl"
#include "larfft_sbnd.fcl"
#include "signalservices_sbnd.fcl"
#include "rootoutput_sbnd.fcl"

#include "pandoramodules_sbnd.fcl"

process_name: Myrecoonly
     
services:
{
  # Load the service that manages root files for histograms.
  TFileService:              { fileName: @local::sbnd_tfileoutput.fileName }
  message:                   @local::sbnd_message_services_prod # from messages_sbnd.fcl
  FileCatalogMetadata:       @local::sbnd_file_catalog_mc       # from sam_sbnd.fcl
                             @table::sbnd_services              # from services_sbnd.fcl
                             @table::sbnd_random_services       # from services_sbnd.fcl; required by fuzzyCluster
                             @table::sbnd_g4_services           # from simulationservices_sbnd.fcl; required by opt0finder
  LArFFT:                    @local::sbnd_larfft
  SignalShapingServiceSBND: @local::sbnd_signalshapingservice  # from signalservices_sbnd.fcl
  BackTrackerService: @local::sbnd_backtrackerservice
  ParticleInventoryService:  @local::sbnd_particleinventoryservice
}

source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

outputs:
{
  out:
  {
              @table::sbnd_rootoutput # inherit shared settings
    fileName: "mypandora_sbnd_%p-%tc.root" # default file name, can override from command line with -o or --output
    dataTier: "reconstructed"                          
    outputCommands: [                                  
     	"keep *_*_*_*",                               
        "drop raw::OpDetWaveforms_*_*_*",             
     	"drop *raw::RawDigits*_*_*_*",                
     	#"drop sim::SimChannels_*_*_*",               
     	"drop sim::OpDetBacktrackerRecords_*_*_*",    
     	"drop *_linecluster_*_*",                     
     	"drop *_fasthit_*_*"                          
    ]
  }
}

physics:
{

  producers:
  {
     mypandora:           @local::sbnd_pandora
     mypandoraTrack:      @local::sbnd_pandoraTrackCreation
     mypandoraShower:     @local::sbnd_incremental_pandoraModularShowerCreation
     mypandoraCalo:	  @local::sbnd_gnewcalomc
  }

  analyzers:
  {
  }  


  reco: [ mypandora, mypandoraTrack, mypandoraShower, mypandoraCalo ]
  ana: [  ]
  stream: [out]
  trigger_paths: [reco]
  end_paths: [ stream ]

}

services.BackTrackerService.BackTracker.SimChannelModuleLabel: "simdrift"
physics.producers.mypandora.ConfigFile: "PandoraSettings_Master_SBND_ReClusterCheat.xml"
physics.producers.mypandora.ShouldRunAllHitsCosmicReco:                            false
physics.producers.mypandora.ShouldRunStitching:                                    false
physics.producers.mypandora.ShouldRunCosmicHitRemoval:                             false
physics.producers.mypandora.ShouldRunSlicing:                                      false
physics.producers.mypandora.ShouldRunNeutrinoRecoOption:                           true
physics.producers.mypandora.ShouldRunCosmicRecoOption:                             false
physics.producers.mypandora.ShouldPerformSliceId:                                  false

physics.producers.mypandora.EnableMCParticles:          true                  
physics.producers.mypandoraShower.PFParticleLabel:      "mypandora"           
physics.producers.mypandoraCalo.TrackModuleLabel:       "mypandoraTrack"      
physics.producers.mypandoraCalo.FieldDistortion:        false                 
physics.producers.mypandoraCalo.FieldDistortionEfield:          false         
physics.producers.mypandoraCalo.TrackIsFieldDistortionCorrected:         false
