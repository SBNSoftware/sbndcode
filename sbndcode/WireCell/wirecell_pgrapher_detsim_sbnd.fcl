#
# File:    standard_detsim_sbnd.fcl
# Purpose: Simulates readout response to induced and collected charge
#
# This configuration runs the detector simulation
#
# Input:
# - output of OpticalFastSimulation and ElectronDrift modules
#
# Output:
# - daq: RawDigit collection with simulated TPC readout response as waveforms
# - includes the whole input data
#
#
# Dependencies:
# - uses the bundle of SBND simulation services for readout simulation


#
# services
#

#include "simulationservices_sbnd.fcl"
#include "messages_sbnd.fcl"

#
# modules
#

#include "detsimmodules_sbnd.fcl"
##include "crtsimmodules_sbnd.fcl"
##include "crtslimmer_sbnd.fcl"
##include "opdetdigitizer_sbnd.fcl"
#include "rootoutput_sbnd.fcl"

#
# MC reco
#
#include "mcreco_sbnd.fcl"

process_name: WCLS

services:
{
  TFileService: { fileName: @local::sbnd_tfileoutput.fileName }
  #@table::sbnd_detsim_services
  @table::sbnd_g4_services
  FileCatalogMetadata: @local::sbnd_file_catalog_mc
  #AuxDetExptGeoHelperInterface: { service_provider: "sbndcode/CRT/CRTGeometryHelper" }
  #AuxDetGeometry: { @table::sbnd_geo_source }
}


source:
{
  module_type:     RootInput
}


# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

  producers:
  {
    rns:       { module_type: "RandomNumberSaver" }
    #daq:       @local::sbnd_simwire
 
    simtpc2d : {
       module_type : WireCellToolkit
       wcls_main: {
          tool_type: WCLS
          apps: ["Pgrapher"] #TbbFlow Pgrapher changed Ewerton 2023-03-14
    
          plugins: ["WireCellPgraph", "WireCellGen","WireCellSio","WireCellLarsoft"] #changed Ewerton 2023-03-14
  
          # needs to be found via your WIRECELL_PATH 
          configs: ["pgrapher/experiment/sbnd/wcls-sim-drift-simchannel.jsonnet"]
    
    
          # Contract note: these exact "type:name" must be used to identify
          # the configuration data structures for these components in the Jsonnet.
    
          inputers: ["wclsSimDepoSource:"] #changed Ewerton 2023-03-15
          outputers: [
             "wclsSimChannelSink:postdrift", #<- comment this line when using DepoSet Ewerton 2023-03-17
             "wclsFrameSaver:simdigits"
          ]
    
          # Make available parameters via Jsonnet's std.extVar()
          params: {
	    inputTag: "ionandscint:"
          }
          structs: {
            # Longitudinal diffusion constant [cm2/s]
            DL: 4.0
            # Transverse diffusion constant [cm2/s]
            DT: 8.8
            # Electron lifetime [ms]
            lifetime: 10.0
            # Electron drift speed, assumes 0.5 kV/cm and 88.4 K. Units: mm/us
	    driftSpeed: 1.563
          }
       }
    }
    
    # Truth-level reconstruction
    mcreco: @local::sbnd_mcreco

    #crt:       @local::sbnd_crtsim
    #opdaq:     @local::sbnd_opdetdigitizer
  }

  #define the producer and filter modules for this path, order matters,
  #simulate:  [ rns, daq, crt, opdaq] #default 
  #simulate:  [ rns, daq, simtpc2d, crt, opdaq] #default (daq) plus wirecell drift simulation (simtpc2d)
  simulate:  [ simtpc2d, mcreco] #only wirecell drift simulation (simtpc2d)

  #define the output stream, there could be more than one if using filters
  stream1:   [ out1 ]

  #ie analyzers and output streams.  these all run simultaneously
  end_paths: [stream1]
}

# block to define where the output goes.  if you defined a filter in the physics
# block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
# entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
  out1:
  {
    @table::sbnd_rootoutput # inherit shared settings
    dataTier: "simulated"
    compressionLevel: 1 # TODO better to use no compression here and Huffman encoding
  }
}



