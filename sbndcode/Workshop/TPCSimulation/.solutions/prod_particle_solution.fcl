# services
#include "simulationservices_sbnd.fcl"
#include "messages_sbnd.fcl"

# modules
#include "singles_sbnd.fcl"
#include "rootoutput_sbnd.fcl"


process_name: SingleGen

# Configure the services used by the modules
services:
{
  @table::sbnd_simulation_services # load simulation services in bulk
  # Load the service that manages root files for output histograms.
  TFileService: 
  { 
    fileName: "hists_prodsingle_sbnd_gen.root" 
  }
}

# Start each new event with an empty event.
source:
{
  module_type:     EmptyEvent
  timestampPlugin: 
  { 
    plugin_type: "GeneratedEventTimestamp" 
  }
  maxEvents:      10          # Number of events to create
  firstRun:        1          # Run number to use for this file
  firstEvent:      1          # number of first event in the file
}


# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

  producers:
  {
    rns:       { module_type: "RandomNumberSaver" }
    generator: @local::sbnd_singlep
  }

  # define the producer and filter modules for this path, order matters, 
  simulate:  [ rns, generator ] 

  # define the output stream, there could be more than one if using filters 
  stream1:   [ out1 ]

  # All modules which modify the event here (filters and producers)
  trigger_paths: [simulate]

  # All modules which don't modify the event (analyzers and output streams)
  end_paths: [stream1]  
}

# block to define where the output goes.
outputs:
{
  out1:
  {
    @table::sbnd_rootoutput # inherit shared settings
    fileName: "prodsingle_sbnd_%p-%tc.root" # default file name, can override from command line with -o or --output
  }
}

#
# at the end of the configuration, we can override single parameters to reflect our needs:
#
# Particles http://pdg.lbl.gov/2007/reviews/montecarlorpp.pdf
physics.producers.generator.PDG: [ 13, 2212 ]
# Momentum
physics.producers.generator.P0:     [ 0.7, 0.8 ]  # GeV/c
physics.producers.generator.SigmaP: [ 0.0, 0.0 ]  # GeV/c
physics.producers.generator.PDist:  0             # 0 = flat, 1 = gaussian
# Vertex position
physics.producers.generator.X0:      [ -100.0, -100.0 ] # cm
physics.producers.generator.Y0:      [ 0.0, 0.0 ]       # cm
physics.producers.generator.Z0:      [ 150.0, 150.0 ]   # cm
physics.producers.generator.SigmaX:  [ 0.0, 0.0 ]       # cm
physics.producers.generator.SigmaY:  [ 0.0, 0.0 ]       # cm
physics.producers.generator.SigmaZ:  [ 0.0, 0.0 ]       # cm
physics.producers.generator.PosDist: 0
physics.producers.generator.SingleVertex: true          # 1 = all particles from same vertex
# Time relative to start of "beam" (t=0)
physics.producers.generator.T0:     [ 0.0, 0.0 ] # microsecond
physics.producers.generator.SigmaT: [ 0.0, 0.0 ] # microsecond
physics.producers.generator.TDist:  0
# Angles
physics.producers.generator.Theta0XZ:     [ -10.0, 35.0 ] # degrees
physics.producers.generator.Theta0YZ:     [ 0.0, 10.0 ]   # degrees
physics.producers.generator.SigmaThetaXZ: [ 0.0, 0.0 ]    # degrees
physics.producers.generator.SigmaThetaYZ: [ 0.0, 0.0 ]    # degrees
#physics.producers.generator.SigmaThetaXZ: [ 10.0, 10.0 ]  # degrees
#physics.producers.generator.SigmaThetaYZ: [ 10.0, 10.0 ]  # degrees
physics.producers.generator.AngleDist:    1
