# ---------- base model --------
#include "mlreco_sbnd.fcl"
#include "prodsingle_sbnd_proj.fcl"

process_name: ProdGenG4

# change geometry to all-LAr
services.Geometry: @local::sbnd_geo_larworld

# Define the modules
physics:
{

  producers:
  {
    
    # Random number saver
    rns:       { module_type: "RandomNumberSaver" }

    # Generation
    generator: @local::sbnd_singlep

    # A dummy module that forces the G4 physics list to be loaded
    loader: { module_type: "PhysListLoader" }

    # The geant4 step
    largeant: @local::sbnd_larg4

    # Creation of ionization electrons and scintillation photons, inside the active volume
    ionandscint: @local::sbnd_ionandscint

    # Electron propogation
    simdrift: @local::sbnd_simdrift

    # Merges dropped and nominal MCParticle into separate vector
    #simplemerge: @local::sbnd_simplemerge

  }

  filters:
  {
    plister:   { module_type: "ParticleLister" } 
  }

  #define the producer and filter modules for this path, order matters, 
  simulate:  [ rns, generator, loader, largeant, ionandscint ] #, #simplemerge, plister ] 

  #define the output stream, there could be more than one if using filters 
  stream1:   [ out1 ]

  #ie analyzers and output streams.  these all run simultaneously
  end_paths: [ stream1 ]  
}


physics.producers.largeant.G4PhysListName:      "QGSP_BERT_HP"

services.LArG4Parameters.UseCustomPhysics:      true
services.LArG4Parameters.EnabledPhysics:        [ "Em", "SynchrotronAndGN", "Ion", "HadronHP", "Decay", "HadronElastic", "Stopping" ]
services.LArG4Parameters.ElectronClusterSize:   600
services.LArG4Parameters.KeepEMShowerDaughters: true
services.ParticleListAction.keepEMShowerDaughters: true
services.ParticleListAction.KeepDroppedParticlesInVolumes: []

outputs.out1.fileName: "prodsingle_larworld_%p-%tc.root"

