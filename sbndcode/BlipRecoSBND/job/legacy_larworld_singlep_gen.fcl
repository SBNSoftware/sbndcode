# ---------- modules ------------
#include "detsimmodules_sbnd.fcl"

# ---------- base model --------
# #include "prodsingle_sbnd.fcl"

process_name: SingleGenG4

#services:
#{
#  FileCatalogMetadata: @local::sbnd_file_catalog_mc
#  TFileService: { fileName: @local::sbnd_tfileoutput.fileName }
#  @table::sbnd_simulation_services 
#}

# change geo to use LArBLOCK
services.Geometry: @local::sbnd_geo_larworld

# since this is a configuration typically run as interactive test,
# we set up message configuration accordingly:
services.message: @local::sbnd_message_services_interactive # from messages_sbnd.fcl

#================================================================
# Start each new event with an empty event.
source:
{
  module_type:     EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:      5000          # Number of events to create
  firstRun:        1          # Run number to use for this file
  firstEvent:      1          # number of first event in the file
}

# Define the modules
physics:
{

  producers:
  {
    rns:       { module_type: "RandomNumberSaver" }
    generator: @local::sbnd_singlep
    largeant:  @local::sbnd_largeant
    daq:       @local::sbnd_simwire
  }
  
  filters:
  {
    plister:   { module_type: "ParticleLister" } 
  }

  #define the producer and filter modules for this path, order matters, 
  simulate:  [ rns, generator, largeant, plister ] 

  #define the output stream, there could be more than one if using filters 
  stream1:   [ out1 ]

  #ie analyzers and output streams.  these all run simultaneously
  end_paths: [ stream1 ]  
}

#================================================================
outputs:
{
  out1:
  {
    @table::sbnd_rootoutput # inherit shared settings
    dataTier: "simulated"
    SelectEvents: [ simulate ]
  }
}

outputs:
{
  out1:
  {
    module_type:       RootOutput
    fileName:         "prodsingle_larworld_%p-%tc.root"
    dataTier:         "simulated"
    SelectEvents:     [ simulate ]
    compressionLevel:  1
  }
} # outputs

physics.producers.generator.PDG: [-211]
physics.producers.generator.P0:  [0.310] # KE = 200MeV --> P = 310MeV
physics.producers.generator.SigmaP: [0.0] 
physics.producers.generator.PDist: 0
physics.producers.generator.X0: [0]
physics.producers.generator.Y0: [0]
physics.producers.generator.Z0: [10]
physics.producers.generator.T0: [0] # SET TO 1700
physics.producers.generator.SigmaX: [0]
physics.producers.generator.SigmaY: [0]
physics.producers.generator.SigmaZ: [0]
physics.producers.generator.SigmaT: [0]
physics.producers.generator.PosDist: 0
physics.producers.generator.Theta0XZ: [0]
physics.producers.generator.Theta0YZ: [0]
physics.producers.generator.SigmaThetaXZ: [0.]
physics.producers.generator.SigmaThetaYZ: [0.]
physics.producers.generator.AngleDist: 0

services.LArG4Parameters.SaveEMShowerDaughters:	    true
services.LArG4Parameters.VisualizeNeutrals:         true
services.LArG4Parameters.ParticleKineticEnergyCut:  0.00001
services.LArG4Parameters.VisualizationEnergyCut:    0.00001
