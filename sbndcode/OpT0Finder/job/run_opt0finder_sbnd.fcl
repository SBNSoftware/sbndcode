#include "services_sbnd.fcl"
#include "simulationservices_sbnd.fcl"
#include "messages_sbnd.fcl"
#include "sam_sbnd.fcl"

#include "opt0finder_sbnd.fcl"
#include "opt0finderana_sbnd.fcl"

process_name: OpT0Finder

services:
{
  # Load the service that manages root files for histograms.
  TFileService:              { fileName: "opt0finder_tree.root" }
  RandomNumberGenerator:     {}
  message:                   @local::sbnd_message_services_prod # from messages_sbnd.fcl
  FileCatalogMetadata:       @local::sbnd_file_catalog_mc       # from sam_sbnd.fcl
                             @table::sbnd_services              # from services_sbnd.fcl
                             @table::sbnd_g4_services
}


#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1  # Number of events to create
}


#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName:    "opt0finder-art.root"
    dataTier:    "reconstructed"
    compressionLevel: 1
    SelectEvents: ["reco"]
 }
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
  producers:
  {
    opt0finder:    @local::sbnd_opt0_finder_one_to_many
  }

  analyzers:
  {
    opt0finderana:     @local::sbnd_opt0_finder_ana
  }


  #define the producer and filter modules for this path, order matters,
  #filters reject all following items.  see lines starting physics.producers below
  reco: [
    opt0finder
  ]

  ana: [
    opt0finderana
  ]

  # define the output stream, there could be more than one if using filters
  stream1: [out1]

  # trigger_paths is a keyword and contains the paths that modify the art::event,
  # ie filters and producers
  trigger_paths: [reco]

  # end_paths is a keyword and contains the paths that do not modify the art::Event,
  # ie analyzers and output streams.  these all run simultaneously
  end_paths: [ana, stream1]
}
## default settings 
physics.producers.opt0finder.SelectNeutrino: true # ignore unambiguous cosmics 
physics.producers.opt0finder.ExcludeExitingOpDets: true # exclude optical detectors near exiting track exit points 
physics.producers.opt0finder.PhotoDetectors: ["pmt_coated", "pmt_uncoated"] # use PMTs only 
physics.producers.opt0finder.FlashMatchConfig.QLLMatch.NormalizeFlash: true # use normalized meas/hypo flases
physics.producers.opt0finder.FlashMatchConfig.QLLMatch.QLLMode: 0 # use chisq with ^^ normalization above

# To use Optical Library fast mode:
# services.PhotonVisibilityService: @local::sbnd_library_vuv_vis_prop_timing_photonvisibilityservice
