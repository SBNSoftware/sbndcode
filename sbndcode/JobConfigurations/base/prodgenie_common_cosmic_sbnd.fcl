#
# File:    prodgenie_common_cosmic_sbnd.fcl
# Purpose: Base generation of neutrino events overlaid with cosmic rays
# Version: 1.2
# 
# This configuration runs event generation only, with neutrino events generated
# by Genie and with Corsika as cosmic ray generator.
# 
# TODO rename GENIE flux files
# 
# Input: no input file required
# 
# Dependencies:
# - uses the bundle of SBND simulation services
# - will require flux files for Genie and Corsika
#
# Changes:
# 20160707 (petrillo@fnal.gov) [v1.1]
#   - uniformed to prodsingle_sbnd.fcl
#   - removed Corsika from execution path
# 20160817 (petrillo@fnal.gov) [v1.2]
#   enabled cosmic ray generation
#

#
# services
#

#include "services_sbnd.fcl"
#include "messages_sbnd.fcl"

#
# modules
#

#include "emptyevent_sbnd.fcl"
#include "genie_sbnd.fcl"
#include "corsika_sbnd.fcl"


process_name: GenieGen


#
# services
#
services: {
  
  TFileService:          { fileName: "hists_prodgenie_common_cosmic_sbnd_%p-%tc.root" }
  IFDH:                  {} # required by GENIEGen
                         @table::sbnd_basic_services   # from simulationservices_sbnd.fcl
                         @table::sbnd_random_services  # from simulationservices_sbnd.fcl
  FileCatalogMetadata:   @local::sbnd_file_catalog_mc  # from sam_sbnd.fcl
  
  # since this is a configuration expected to be run pro production,
  # we set up message configuration accordingly:
  message:               @local::sbnd_message_services_prod

} # services


#
# input
#
source: @local::emptyevent_sbnd


#
# processing
#
physics:
{

  producers:
  {
    rns:       { module_type: "RandomNumberSaver" }
    generator: @local::sbnd_genie_simple
    corsika:   @local::sbnd_corsika_cmc
  }

  #define the producer and filter modules for this path, order matters, 
  simulate:  [ rns, generator, corsika ] 

  #define the output stream, there could be more than one if using filters 
  stream1:   [ out1 ]

  #trigger_paths is a keyword and contains the paths that modify the art::event, 
  #ie filters and producers
  trigger_paths: [simulate] 

  #end_paths is a keyword and contains the paths that do not modify the art::Event, 
  #ie analyzers and output streams.  these all run simultaneously
  end_paths:     [stream1]  

} # physics


#
# output
#
outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName:    "prodgenie_common_cosmic_sbnd_%p-%tc.root" # default file name, can override from command line with -o or --output
    dataTier:    "generated"
    compressionLevel: 1
    saveMemoryObjectThreshold: 0
  }
} # outputs


#
# override
#
physics.producers.generator.BufferBox: [ -250.0, +250.0, -250.0, +250.0, -250.0, +250.0 ]
