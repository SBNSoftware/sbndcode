#include "services_sbnd.fcl"
#include "simulationservices_sbnd.fcl"

process_name: Landed

# Define the services

services:
{
  Timing:       {}
  RandomNumberGenerator: {} #ART native random number generator
  user:    {  
        LandedSocket: {}
                       @table::sbnd_geometry_services
        MagneticField: @local::no_mag_larsoft
        }
}

#Look at the input files
source:
{
  module_type: RootInput
  fileNames:  [ "single_gen.root" ]
  maxEvents:   -1       # Number of events to create
  #inputCommands:["keep*","drop sim::PMTHits_*_*_*"]
}
# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

    analyzers:
        {
        ed: {
            module_type: Landed
            #which: "truth"    #truth for mc truth, or reco name for reconstruction
            outputFilename: "eventdisplayfile.eddb"  #omit to use socket
            events: [ ]   #filter to select certain events
            }
        }
 
 #list the modules for this path, order matters, filters reject all following items
 e1: [ ed ] 

 end_paths: [ e1 ]
}

