#
# File:    reco_sbnd.fcl
# Purpose: Defines a reconstruction configuration file for SBND.  The official workflows should derive from this
# Version: 1.0
#
# Changes:
# 20200923 (d.brailsford@lancster.ac.uk) [v1.0]
#   Initial definition
#
# service configuration
#

#include "mctrutht0matching.fcl"
#include "services_sbnd.fcl"
#include "simulationservices_sbnd.fcl"
#include "messages_sbnd.fcl"
#include "sam_sbnd.fcl"
#include "larfft_sbnd.fcl"
#include "signalservices_sbnd.fcl"

#
# module configuration
#

#include "caldata_sbnd.fcl"
#include "hitfindermodules_sbnd.fcl"
#include "cluster_sbnd.fcl"
#include "trackfindermodules_sbnd.fcl"
#include "calorimetry_sbnd.fcl"
#include "showerfindermodules_sbnd.fcl"
#include "databaseutil_sbnd.fcl"
##include "opticaldetectormodules_sbnd.fcl"
#include "opdeconvolution_sbnd.fcl"
#include "sbnd_ophitfinder_deco.fcl"
#include "sbnd_flashfinder_deco.fcl"
#include "vertexfindermodules.fcl"
#include "pandoramodules_sbnd.fcl"
##include "triggeralgo_service.fcl"
##include "photpropservices_sbnd.fcl"
#include "particleid_sbnd.fcl"
#include "rootoutput_sbnd.fcl"

#include "crtsimhitproducer_sbnd.fcl"
##include "crttzeroproducer_sbnd.fcl"
#include "crttrackproducer_sbnd.fcl"
#include "crtt0matchingalg_sbnd.fcl"
#include "crttrackmatchingalg_sbnd.fcl"

#include "opt0finder_sbnd.fcl"

#include "scecorrections.fcl"
#include "flashmatch_sbnd.fcl"

###include "hitparticleassociations.fcl"

#include "sbnd_trackcalo_skimmer.fcl"

process_name: Reco

services:
{
  # Load the service that manages root files for histograms.
  TFileService:              { fileName: @local::sbnd_tfileoutput.fileName }
  message:                   @local::sbnd_message_services_prod # from messages_sbnd.fcl
  FileCatalogMetadata:       @local::sbnd_file_catalog_mc       # from sam_sbnd.fcl
                             @table::sbnd_services              # from services_sbnd.fcl
                             @table::sbnd_random_services       # from services_sbnd.fcl; required by fuzzyCluster
                             @table::sbnd_g4_services           # from simulationservices_sbnd.fcl; required by opt0finder
  LArFFT:                    @local::sbnd_larfft
  SignalShapingServiceSBND: @local::sbnd_signalshapingservice  # from signalservices_sbnd.fcl
  BackTrackerService: @local::sbnd_backtrackerservice
  ParticleInventoryService:  @local::sbnd_particleinventoryservice
}

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
  ### random number saver
  rns:                 { module_type: RandomNumberSaver }

  ### optical deconvolution
  opdecopmt:          @local::SBNDOpDeconvolutionPMT
  opdecoxarapuca:     @local::SBNDOpDeconvolutionXARAPUCA

  ### optical hit finders
  # ophit:               @local::sbnd_hit_finder
  ophitpmt:            @local::SBNDDecoOpHitFinderPMT
  ophitxarapuca:   @local::SBNDDecoOpHitFinderXArapuca

  ### flash finders
  # opflash:             @local::sbnd_opflash
  opflashtpc0:         @local::SBNDDecoSimpleFlashTPC0
  opflashtpc1:         @local::SBNDDecoSimpleFlashTPC1

  # opflash(arapucas):             @local::sbnd_opflash
  opflashtpc0xarapuca:         @local::SBNDDecoSimpleFlashTPC0Arapuca
  opflashtpc1xarapuca:         @local::SBNDDecoSimpleFlashTPC1Arapuca

  ### calwire producers
  caldata:             @local::sbnd_calwire

  ### hit-finder producers
  gaushit:             @local::sbnd_gaushitfinder
  fasthit:             @local::sbnd_fasthitfinder
#  rffhit:              @local::sbnd_rffhitfinder

  ### Truth-matich for hits
  gaushitTruthMatch:   @local::standard_mcparticlehitmatching

  ### corner-finder
  #corner:              @local::standard_cornerfinder

  ### cluster-finder producers
  #fuzzycluster:        @local::sbnd_fuzzycluster
  linecluster:         @local::sbnd_linecluster
  #cccluster:           @local::sbnd_clustercrawler
  #spacepts:            @local::sbnd_spacepts
  blurredcluster:      @local::sbnd_blurredcluster

  ### pandora
  pandora:             @local::sbnd_pandora
  pandoraTrack:        @local::sbnd_pandoraTrackCreation
  pandoraShowerLegacy: @local::sbnd_pandoraShowerCreation
  pandoraShower:       @local::sbnd_incremental_pandoraModularShowerCreation
  pandoraShowerSBN:    @local::sbnd_sbn_pandoraModularShowerCreation
  pandoraCalo:         @local::sbnd_gnewcalomc
  pandoraPid:          @local::sbnd_chi2pid

  pandoraSCECalo:      @local::sbnd_gnewcalomc
  pandoraSCEPid:       @local::sbnd_chi2pid

  ### SCE-aware pandora:
  pandoraSCE:          @local::scecorrection
  pandoraSCETrack:     @local::sbnd_pandoraTrackCreation
  pandoraSCEShower:    @local::sbnd_sce_incremental_pandoraModularShowerCreation
  pandoraSCEShowerSBN: @local::sbnd_sce_sbn_pandoraModularShowerCreation

  ### track-finder producers
  #trackkalmanhit:      @local::sbnd_track3Dkalmanhit
  #spacepointfinder:    @local::sbnd_spacepoint_finder
  #trackkalsps:         @local::sbnd_kalman

  pmalgtrackmaker:     @local::sbnd_pmalgtrackmaker

  ### shower-finder producers
  emshower:            @local::sbnd_emshower


  ### vertex-finder producers

  ### calorimetry producers
  #trackkalmanhitcalo:  @local::sbnd_calomc
  pmatrackcalo:        @local::sbnd_calomc
  pmatrackpid:         @local::sbnd_chi2pid

  crthit:              @local::standard_crtsimhitproducer
  #crttzero:            @local::standard_crttzeroproducer
  crttrack:            @local::standard_crttrackproducer
  crthitt0:            @local::sbnd_crthitt0producer
  crttrackt0:          @local::sbnd_crttrackt0producer
  crthitt0SCE:         @local::sbnd_crthitt0producer
  crttrackt0SCE:       @local::sbnd_crttrackt0producer

  ### flash-matching
  fmatch:              @local::sbnd_simple_flashmatch
  fmatchSCE:           @local::sbnd_simple_flashmatch_sce
  fmatchop:            @local::sbnd_simple_flashmatch_op
  fmatchopSCE:         @local::sbnd_simple_flashmatch_op_sce
  fmatchara:           @local::sbnd_simple_flashmatch_ara
  fmatcharaSCE:        @local::sbnd_simple_flashmatch_ara_sce
  fmatchopara:         @local::sbnd_simple_flashmatch_opara
  fmatchoparaSCE:      @local::sbnd_simple_flashmatch_opara_sce
  opt0finder:          @local::sbnd_opt0_finder_one_to_many
  opt0finderSCE:       @local::sbnd_opt0_finder_one_to_many

  ### Uncalibrated calorimetry producer for calibration caloskimmer
  caloskimCalorimetry: @local::caloskim_calorimetry

 }

 #define the producer and filter modules for this path, order matters,
 #filters reject all following items.  see lines starting physics.producers below
 reco1: [ rns
         , opdecopmt
         , opdecoxarapuca
         , ophitpmt
         , ophitxarapuca
         , opflashtpc0
         , opflashtpc1
         , opflashtpc0xarapuca
         , opflashtpc1xarapuca
         , caldata
         , gaushit
         , fasthit
   #         , linecluster
         , gaushitTruthMatch
   #      , rffhit
   #      , corner
   #      , fuzzycluster
 ]

 reco2_no_opt0finder: [
          rns
#         , linecluster
   #      , cccluster
   #      , spacepts,
   #       , blurredcluster
          , pandora, pandoraTrack, pandoraShower, pandoraShowerSBN
  #       , pandoraShowerLegacy
          , pandoraCalo, pandoraPid
   #      , trackkalmanhit, spacepointfinder, trackkalsps,
   #      , pmalgtrackmaker
   #      , trackkalmanhitcalo,
  #       , pmatrackcalo
  #       , pmatrackpid
  #        , emshower
         , crthit
   #      , crttzero
         , crttrack
         , crthitt0
         , crttrackt0
         , fmatch
         , fmatchop
         , fmatchara
         , fmatchopara
	 , caloskimCalorimetry
 ]


 # Run caloskimmer to produce ntuples for calibration as part of reco2 chain

 analyzers:{
  caloskim: @local::caloskim_nodigits_goldentracks
 }

 caloskimana: [ caloskim ]

 #define the output stream, there could be more than one if using filters
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event,
 #trigger_paths is defined outside of the physics scope (below) as we want to merge sequences together

 #end_paths is a keyword and contains the paths that do not modify the art::Event,
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
     @table::sbnd_rootoutput
     dataTier:    "reconstructed"
     outputCommands: [
         "keep *_*_*_*",
         "drop raw::OpDetWaveforms_*_*_*",
         "drop *raw::RawDigits*_*_*_*",
         #"drop sim::SimChannels_*_*_*",
         "drop sim::OpDetBacktrackerRecords_*_*_*",
         "drop *_linecluster_*_*",
         "drop *_fasthit_*_*"
     ]


 }
}

physics.reco2: [ @sequence::physics.reco2_no_opt0finder, opt0finder ]

#Here we tell ART that we want to run both sequences of paths.  This has to be done here as ART is not able to find the sequences while still wrapped in physics{ }
physics.fullreco: [ @sequence::physics.reco1,
                    @sequence::physics.reco2
		          ]
physics.fullreco_no_opt0finder: [ @sequence::physics.reco1,
                                 @sequence::physics.reco2_no_opt0finder]

physics.trigger_paths: [ fullreco ]



### Here, we overwrite ALL module labels with the ones defined above.

#physics.producers.opflash.InputModule:                          "optreadout"
#physics.producers.opflash.GenModule:                            "generator"

physics.producers.caldata.DigitModuleLabel:                     "daq"

physics.producers.gaushit.CalDataModuleLabel:                   "caldata"
physics.producers.fasthit.DigitModuleLabel:                     "daq"
#physics.producers.rffhit.CalDataModuleLabel:                    "caldata"

#physics.producers.corner.CornerAlgParamSet.RawDataModuleLabel:  "daq"
#physics.producers.corner.CornerAlgParamSet.CalDataModuleLabel:  "caldata"
#
physics.producers.linecluster.HitFinderModuleLabel:              "gaushit"

#physics.producers.fuzzycluster.HitsModuleLabel:                 "gaushit"
#physics.producers.fuzzycluster.CalDataModuleLabel:              "caldata"

#physics.producers.cccluster.CalDataModuleLabel:                 "caldata"
#physics.producers.cccluster.CCHitFinderAlg.CalDataModuleLabel:  "caldata"

### Added for Rhiannon's analysis work
physics.producers.pandoraCalo.TrackModuleLabel:                  "pandoraTrack"
physics.producers.pandoraCalo.FieldDistortion:                	 false
physics.producers.pandoraCalo.FieldDistortionEfield:          	 false
physics.producers.pandoraCalo.TrackIsFieldDistortionCorrected:	 false
physics.producers.pandoraPid.TrackModuleLabel:                   "pandoraTrack"
physics.producers.pandoraPid.CalorimetryModuleLabel:             "pandoraCalo"

physics.producers.pandoraSCECalo.TrackModuleLabel:               "pandoraSCETrack"
physics.producers.pandoraSCECalo.FieldDistortion:                true
physics.producers.pandoraSCECalo.FieldDistortionEfield:          true
physics.producers.pandoraSCECalo.TrackIsFieldDistortionCorrected:true
physics.producers.pandoraSCEPid.TrackModuleLabel:                   "pandoraSCETrack"
physics.producers.pandoraSCEPid.CalorimetryModuleLabel:             "pandoraSCECalo"

physics.producers.opt0finderSCE.SliceProducer:  "pandoraSCE"
physics.producers.opt0finderSCE.TrackProducer:  "pandoraSCETrack"
physics.producers.opt0finderSCE.ShowerProducer: "pandoraSCEShowerSBN"
physics.producers.opt0finderSCE.CaloProducer:   "pandoraSCECalo"

physics.producers.crthitt0SCE.TpcTrackModuleLabel: "pandoraSCETrack"
physics.producers.crthitt0SCE.T0Alg.TPCTrackLabel: "pandoraSCETrack"
physics.producers.crttrackt0SCE.TpcTrackModuleLabel: "pandoraSCETrack"
physics.producers.crttrackt0SCE.CrtTrackAlg.TPCTrackLabel: "pandoraSCETrack"

#physics.producers.trackkalmanhit.HitModuleLabel:   "gaushit"
#physics.producers.trackkalmanhit.ClusterModuleLabel:   "fuzzycluster"
#physics.producers.trackkalmanhit.ClusterModuleLabel:   "cccluster"

physics.producers.pmalgtrackmaker.HitModuleLabel:               "linecluster"
physics.producers.pmalgtrackmaker.ClusterModuleLabel:           "linecluster"
physics.producers.pmalgtrackmaker.EmClusterModuleLabel:         "" # do not exculde any cluster


#physics.producers.spacepointfinder.ClusterModuleLabel:          "fuzzycluster"
#physics.producers.spacepointfinder.ClusterModuleLabel:          "cccluster"

#physics.producers.trackkalmanhitcalo.TrackModuleLabel:          "trackkalmanhit"
#physics.producers.trackkalmanhitcalo.SpacePointModuleLabel:     "trackkalmanhit"

physics.producers.pmatrackcalo.TrackModuleLabel:                "pmalgtrackmaker"
physics.producers.pmatrackcalo.SpacePointModuleLabel:           "pmalgtrackmaker"
physics.producers.pmatrackpid.TrackModuleLabel:                 "pmalgtrackmaker"
physics.producers.pmatrackpid.CalorimetryModuleLabel:           "pmatrackcalo"


physics.producers.blurredcluster.HitsModuleLabel:               "linecluster"
physics.producers.blurredcluster.TrackModuleLabel:              "pmalgtrackmaker"
physics.producers.blurredcluster.VertexModuleLabel:             "linecluster"

#To use Blurred Cluster the ClusterModuleLabel to blurredcluster and comment out the PFParticle module label, add blurred cluster to the reco chain.
physics.producers.emshower.ClusterModuleLabel:                  "pandora"
physics.producers.emshower.HitsModuleLabel:                     "gaushit"
physics.producers.emshower.PFParticleModuleLabel:                "pandora"
physics.producers.emshower.TrackModuleLabel:                    "pmalgtrackmaker"

# Configure the SCE corrections
# For now: always assume t = 0
physics.producers.pandoraSCE.T0Labels: []
physics.producers.pandoraSCE.T0LabelsCorrectT0: []
physics.producers.pandoraSCE.CorrectNoT0Tag: true
# point track/shower creation to the SCE pandora
physics.producers.pandoraSCETrack.PFParticleLabel:               "pandoraSCE"
physics.producers.pandoraSCEShower.PFParticleLabel:              "pandoraSCE"
physics.producers.pandoraSCEShowerSBN.PFParticleLabel:           "pandoraSCE"

#physics.producers.gaushitTruthMatch.HitParticleAssociations:                        @local::DirectHitParticleAssnsTool
physics.producers.gaushitTruthMatch.HitParticleAssociations.HitModuleLabel:         "gaushit"
#physics.producers.gaushitTruthMatch.HitParticleAssociations.MCParticleModuleLabelVec:  ["largeant"]

services.BackTrackerService.BackTracker.SimChannelModuleLabel: "simdrift"
