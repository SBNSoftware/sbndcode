#include "CAFMaker.fcl"

#include "services_sbnd.fcl"
#include "geometry_sbnd.fcl"

#include "larproperties.fcl"
#include "backtrackerservice.fcl"
#include "detectorproperties_sbnd.fcl"
#include "particleinventoryservice.fcl"
#include "photonbacktrackerservice.fcl"
#include "mccheatermodules.fcl"

#include "calorimetry_sbnd.fcl"

#include "trackscatterclosestapproach.fcl"
#include "trackstoppingchi2fitter.fcl"
#include "showerselectionvarsproducer.fcl"
#include "showercosmicdistanceproducer.fcl"
#include "sbn_pid.fcl"
#include "sbn_crumbs_producer.fcl"

#include "pmtflashtrigger_producer.fcl"

#include "flashmatch_sbnd.fcl"
#include "sbn_stub.fcl"

#include "cafmaker_common_defs.fcl"

process_name: CAFmaker

services:
{
  # Load the service that manages root files for histograms.
#  scheduler:    {wantTracer : false wantSummary : false}
  TimeTracker: {}
  RandomNumberGenerator: {} #ART native random number generator
  TFileService: { fileName: "fullchain_production_hist_prod5.root" closeFileFast: false }
#  scheduler:    { wantTracer: false wantSummary: true }
  message:      { debugModules: ["*"] destinations: { debugmsg:{type: "cout" threshold: "INFO"} } }
  TimeTracker:  { printSummary: true }
  # #  @table::standard_services

  AuxDetExptGeoHelperInterface: { service_provider: "sbndcode/CRT/CRTGeometryHelper" }
  ExptGeoHelperInterface:    @local::sbnd_geometry_helper
  GeometryConfigurationWriter: {}
  Geometry:                  @local::sbnd_geo
  AuxDetGeometry:            @local::sbnd_auxdetgeo
  LArPropertiesService:      @local::standard_properties
  DetectorClocksService:     @local::sbnd_services.DetectorClocksService
  DetectorPropertiesService: @local::sbnd_detproperties
  ParticleInventoryService:  @local::standard_particleinventoryservice
  BackTrackerService:        @local::standard_backtrackerservice
  SpaceCharge:               @local::sbnd_spacecharge
  NuRandomService: {
    policy: perEvent
  }
}

# services.IFBeam: {}
# services.BackTracker: @local::standard_backtracker

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
 producers:{
#  dq:                   @local::standard_daqheadersummary    #dq
#  exposure:             @local::standard_cosmicexposureinfo  #calib
#  ifdbspillinfo:        @local::standard_ifdbspillinfo       #beam
#  calhit:               @local::standard_calhit              #calib
#  slicer:     @local::standard_slicer4d            #reco
#  slicertd:             @local::standard_td                  #reco
#  slicer:               @local::standard_slicemergeviews
#  cosmictrack:          @local::standard_cosmictrack         #reco
#  windowtrack:          @local::window_cosmictrack           #reco

   # Includes: pandoraTrackMCS, pandoraTrackRange, rns, genieweight, fluxweight
   @table::cafmaker_common_producers

   flashtrig: @local::pmtflashtrigmaker_sbnd

   vertexCharge: @local::vertex_charge_sbnd
   vertexStub: @local::vertex_stub_sbnd
   crumbs: @local::crumbs_sbnd

   pandoraTrackClosestApproach:          @local::trackscatterclosestapproach_sbn
   pandoraTrackStoppingChi2: @local::trackstoppingchi2fitter_sbn
   pandoraTrackDazzle:       @local::dazzle_sbnd

   pandoraShowerSelectionVars:  @local::showerSelectionVars_sbn
   pandoraShowerCosmicDist: @local::showerCosmicDist_sbn
   pandoraShowerRazzle:         @local::razzle_sbnd
}
  filters:{
    flashtrigfilter: @local::pmtflashtrigfilter_sbnd
  }
  analyzers:
  {
#    metadata: @local::standard_metadata            #prod
  }
 runprod: [ pandoraTrackMCS, pandoraTrackRange, pandoraShowerSelectionVars,
            vertexCharge, vertexStub,
            pandoraTrackClosestApproach, pandoraTrackStoppingChi2, pandoraTrackDazzle,
            pandoraShowerCosmicDist, pandoraShowerRazzle, crumbs,
            cafmaker ]
# makecaf: [cafmaker] #list the modules for this path, order matters, filters reject all following items
# stream1: [metadata]
  stream1:       [ ]
  trigger_paths: [ runprod ]
  end_paths:     [ stream1 ]
}

physics.producers.vertexCharge.CaloAlg: @local::sbnd_calorimetryalgmc
physics.producers.vertexStub.CaloAlg: @local::sbnd_calorimetryalgmc

physics.producers.cafmaker: @local::standard_cafmaker
physics.producers.cafmaker.CosmicGenLabel: "corsika"

# Blinding not needed for MC
physics.producers.cafmaker.CreateBlindedCAF: false

# Include Simple/OpFlashes for PMT/XARAPUCA
physics.producers.cafmaker.FlashMatchOpDetSuffixes: ["", "op", "ara", "opara"]
physics.producers.cafmaker.FlashMatchSCECryoSuffixes: [""]

# Overwrite weight_functions label:
physics.producers.genieweight.weight_functions: @local::physics.producers.genieweight.weight_functions_genie
physics.producers.fluxweight.weight_functions: @local::physics.producers.fluxweight.weight_functions_flux

# input art file.
physics.producers.cafmaker.SystWeightLabels: []

services.BackTrackerService.BackTracker.SimChannelModuleLabel: "simdrift"
